#!/usr/bin/env ruby
require 'rspec'
require File.join(File.dirname(__FILE__), '../../../spec/spec_helper')
require 'benchmark'

def setup_algorithm(n, alg = "Range")
  config = {
    "shards" => n.times.map do |i|
      {"connection" => "connection_#{i}", "less_than" => (i+1) * 100}
    end
  }
  "ActiveRecord::Turntable::Algorithm::#{alg}Algorithm".constantize.new(config)
end

Benchmark.bm(40) do |x|
  %w(Range RangeBsearch).each do |alg|
    [2, 4, 8, 16, 32, 64, 128, 256, 512].map do |n|
      algorithm = setup_algorithm(n, alg)
      x.report("#{alg}: selrand(#{n}) * 1000") {
        1000.times do
          algorithm.calculate(rand(n*100))
        end
      }
      x.report("#{alg}: sellast(#{n}) * 1000") {
        1000.times do
          algorithm.calculate(n*100-1)
        end
      }
    end
  end
end

